<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- <mvc:annotation-driven></mvc:annotation-driven> -->
	<!--   <tx:annotation-driven mode="aspectj" transaction-manager="transactionManager"/> -->

	<context:component-scan base-package="com.cb" />
	<import resource=""/>
	
	<bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url" value="jdbc:mysql://localhost:3306/attendancedb"></property>
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
	</bean>

	<bean id="template" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="datasource"></property>
	</bean>
	<bean id="txMgr" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="datasource"></property>
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="txMgr">
	
	</tx:advice>
	
<!--
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="dataSource" ref="datasource" />
		<property name="sessionFactory" ref="HBannotedSesFactory" />
	</bean>

 		We can manage transaction in two ways
		1. By adding @Transactional(readOnly = false) on top of a method OR
		2. By regex matching method name in the tx:advice as shown below
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" read-only="true" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" />
		</tx:attributes>
	</tx:advice>

	Below configuration says where we want to apply apply the transaction. In the below example we want to apply the transaction in 
		<aop:advisor advice-ref="txAdvice" pointcut-ref="createOperation" />
	
	again uncomment it <aop:config>
		<aop:pointcut id="createOperation" expression="execution(* com.cb.service.SpringMVCservice.insert*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="createOperation" />
	</aop:config>
	
 -->	
	 	<bean id="HBannotedSesFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="datasource"></property>
		<property name="annotatedClasses">
			<list>
				<value>com.cb.bean.LoginBean</value>
				<value>com.cb.bean.RegistrationBean</value>
				<value>com.cb.bean.Address</value>
				<value>com.cb.bean.City</value>
				<value>com.cb.bean.State</value>
				<value>com.cb.bean.Country</value>
				<value>com.cb.bean.AdminLoginBean</value>
				<value>com.cb.bean.CommonLoginTable</value>
				<value>com.cb.bean.DailyRecordBean</value>
				<value>com.cb.bean.PracticalInfoBean</value>
				<value>com.cb.bean.StudentDayLogBean</value>
				<value>com.cb.bean.StudentInfoBean</value>
				<value>com.cb.bean.StudentLoginBean</value>
				<value>com.cb.bean.Teacher_Info</value>
				<value>com.cb.bean.Teacher_login</value>
				<value>com.cb.bean.TeacherLogInfo</value>
				<value>com.cb.bean.TeacherSubject</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	

	<!-- <bean id="hbTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate"> 
		<property name="sessionFactory" ref="datasource"></property> </bean> -->
	<bean id="daoImpl" class="com.cb.dao.SpringMVCdaoImpl">
		<property name="sessionFactory" ref="HBannotedSesFactory"></property>
		<property name="jt" ref="template"></property>
		<!-- <property name="hibernateTemplate" ref="hbTemplate"></property> -->
	</bean>
	
	<!-- Logging Aspect -->
	<bean id="loggingAspect" class="com.cb.aop.LoggingAspect" />

	 <aop:config>
		<aop:aspect ref="loggingAspect">
			<aop:pointcut expression="execution(* com.cb.dao.SpringMVCdaoImpl.insert*(..))"
				id="loggingPointcuts" />
			<aop:around method="logAroundAllMethods"  pointcut-ref="loggingPointcuts" />
		</aop:aspect>
	</aop:config> 

	<bean id="serviceIMPL" class="com.cb.service.SpringMVCserviceIMPL">
		<property name="sessionFactory" ref="HBannotedSesFactory"></property>
		<property name="springMVCdao" ref="daoImpl"></property>
	</bean>

	<bean id="delegete" class="com.cb.delegete.SpringMVCDelegete"
		autowire="byName">
	</bean>

	<!-- <bean id="control" class="com.cb.controller.SpringMVCController" autowire="byName"> 
		</bean> -->

</beans>
